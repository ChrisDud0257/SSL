# general settings
name: LDLSSL_RealESRGAN_1.3_h0.004_ks25_kc9_1000_x4
model_type: LDLRealESRGANSimSelfMask2Model
scale: 4
num_gpu: auto  # set num_gpu: 0 for cpu mode
manual_seed: 0

pre_pad: 0
tile_size: 800
tile_pad: 32
tile_process: False

degradation_order: two

# ----------------- options for synthesizing training data----------------- #
l1_gt_usm: False
percep_gt_usm: False
gan_gt_usm: False
Use_sharpen: ~
Sharpen_before_degra: False
ssl_gt_usm: False

# the first degradation process
resize_prob: [0.1, 0.85, 0.05]  # up, down, keep
resize_range: [0.9, 1.1]
gaussian_noise_prob: 0.5
noise_range: [1, 8]
poisson_scale_range: [0.05, 0.5]
gray_noise_prob: 0.2
jpeg_range: [85, 95]

# the second degradation process
second_blur_prob: 0.8
resize_prob2: [0.1, 0.85, 0.05]  # up, down, keep
resize_range2: [0.9, 1.1]
gaussian_noise_prob2: 0.5
noise_range2: [0, 4]
poisson_scale_range2: [0, 0.3]
gray_noise_prob2: 0.2
jpeg_range2: [87, 95]

queue_size: 192

# dataset and data loader settings
datasets:
  train:
    name: DF2K_OST
    type: MyRealESRGANImageMaskDataset
    dataroot_gt: /data1_ssd4t/chendu/datasets/DF2K_OST/multiscale_HR_sub_512
    dataroot_gt_mask: /data1_ssd4t/chendu/datasets/DF2K_OST/mask_selfsim/multiscale_HR_sub_512/Laplacian/L/threshold-20.0/mat

    blur_kernel_size_min: 1
    blur_kernel_size_max: 3
    kernel_list: ['iso', 'aniso']
    kernel_prob: [0.7, 0.3]
    sinc_prob: 0.01
    blur_sigma: [0.1, 0.6]
    betag_range: [0.1, 2.0]
    betap_range: [0.1, 1.0]

    blur_kernel_size_min2: 1
    blur_kernel_size_max2: 2
    kernel_list2: ['iso', 'aniso']
    kernel_prob2: [0.7, 0.3]
    sinc_prob2: 0.01
    blur_sigma2: [0.1, 0.4]
    betag_range2: [0.1, 2.0]
    betap_range2: [0.1, 1.0]

    final_sinc_prob: 0.1

    gt_size: 128
    use_hflip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 16
    batch_size_per_gpu: 32
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: Set5
    type: MultiLROneGTDataset
    dataroot_gt: /home/chendu/data2_hdd10t/chendu/dataset/basicsr/Set5/GT/GTmod12
    dataroot_lq: /home/chendu/data2_hdd10t/chendu/dataset/BlindLR/ISSL/LR_x4/test_RealESRGAN+BSRGAN_LR-groups30/Set5
    io_backend:
      type: disk

# network structures
network_g:
  type: RRDBNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 23
  num_grow_ch: 32

network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  skip_connection: True

# path
path:
  pretrain_network_g: /data1_ssd4t/chendu/myprojects/EFDM_SIM/experiments/pretrained_models/Real-ESRGAN-HGGT/Blind_PSNR/RRDB_DF2K_OST_Blind_PSNR_x4.pth
  param_key_g: params_ema
  strict_load_g: true
  resume_state: ~

# training settings
train:
  gan_loss_compute: 'GAN'
  mask_stride: 3
  ema_decay: 0.999
  simself_strategy: 'areaarea_mask_nonlocalavg_cuda_v1'
  kernel_size: 25
  scaling_factor: 0.004
  kernel_size_center: 9
  softmax_sr: True
  softmax_gt: True
  simself_dh: 64
  simself_dw: 64
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [200000]
    gamma: 0.5

  total_iter: 300000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: !!float 1e0
    reduction: mean
  artifacts_opt:
    type: L1Loss
    loss_weight: !!float 1e2
    reduction: mean
  selfsim_opt:
    type: L1Loss
    loss_weight: !!float 1e3
    reduction: mean
  selfsim1_opt:
    type:  KLDistanceLoss
    loss_weight: !!float 1e3
    reduction: mean
    softmax: False
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      'conv1_2': 0.1
      'conv2_2': 0.1
      'conv3_4': 1
      'conv4_4': 1
      'conv5_4': 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1e0
    style_weight: 0
    range_norm: false
    criterion: l1
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1e-1

  net_d_iters: 1
  net_d_init_iters: 0

# validation settings
val:
  val_freq: !!float 5e3
  save_img: ~

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true
    ssim: # metric name
      type: calculate_ssim
      crop_border: 4
      test_y_channel: true
    lpips:
      type: calculate_lpips
      crop_border: 4
      better: lower
    dists:
      type: calculate_dists
      crop_border: 4
      better: lower

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
